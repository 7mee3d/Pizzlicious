<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxBackPrevPage.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        I/4CgaNXgWXJGTAAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAGEHAABhBwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAAB1AAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AG4AAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAA6gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAANIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwAA
        AHcAAACQAAAA5QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEIAAACFAAAAiAAAAGkAAAAaAAAA5wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAtAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOAAAA+QAAAP8AAAD/AAAA/wAAAGAAAACZAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAC0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAADGAAAA/wAAAP8AAADvAAAAMgAAALUAAAD/AAAAswAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAAC5AAAA/wAAAP8AAAD/AAAALQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAEQAAAA0AAABxAAAA/gAAAP8AAAClAAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAKsAAAD/AAAA/wAA
        AP8AAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE0AAADuAAAA+wAAAP8AAAD/AAAA/wAA
        AP4AAAD/AAAA/wAAAP4AAAD/AAAA8gAAAPAAAAD/AAAA/gAAAP8AAAD8AAAA/wAAAP8AAAD8AAAA/wAA
        AP8AAAD/AAAA/wAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANwAAAKoAAAC5AAAA9wAA
        AP8AAAD/AAAAQgAAANcAAAD/AAAAIQAAAM4AAAAFAAAAEgAAALUAAAAxAAAA4wAAABkAAADaAAAAKAAA
        AA4AAACyAAAA/wAAAP8AAAD/AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAABVAAAAVQAA
        AEAAAAArAAAA8wAAAP8AAAA0AAAAtgAAANQAAAAMAAAAvgAAACAAAACbAAAAzgAAACAAAABJAAAAAAAA
        AIYAAABZAAAArAAAAEgAAAD/AAAA/wAAAP8AAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAA8QAA
        AP8AAAD/AAAA/wAAAFQAAACeAAAA/wAAADQAAAAUAAAAEgAAAAUAAAC+AAAAFQAAAGcAAAC7AAAAAQAA
        ADEAAAARAAAAfwAAAG0AAAC/AAAAQAAAAP8AAAD/AAAA/wAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAADhAAAA/wAAAP8AAAD8AAAAQwAAAKgAAAD/AAAANgAAAGMAAACiAAAAAQAAAMIAAAAOAAAARwAA
        ALcAAAAFAAAA0AAAABYAAACDAAAAbwAAAMEAAABCAAAA/wAAAP8AAAD/AAAALQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA0AAAAzAAAAMwAAAB4AAABKAAAA+gAAAP8AAADWAAAA+gAAAP8AAADSAAAA+wAA
        AL0AAAC7AAAA9AAAANMAAAD/AAAA1QAAAO8AAADlAAAA+QAAANsAAAD/AAAA/wAAAP8AAAAtAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIAAADMAAAA3gAAAP8AAAD/AAAA/wAAAJwAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAogAAAP8AAAD/AAAA/wAA
        AC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgAAAMwAAADfAAAA/wAAAP8AAAD/AAAAogAA
        ABEAAAB3AAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAcQAAABcAAACnAAAA/wAA
        AP8AAAD/AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAyAAAAMwAAAB0AAABLAAAA+wAA
        AP8AAAD/AAAAQwAAALMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAClAAAAUQAA
        AP8AAAD/AAAA/wAAAP8AAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAA4AAAAP8AAAD/AAAA/AAA
        AEIAAACpAAAA/wAAAP8AAACeAAAASgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        ADwAAACsAAAA/wAAAP8AAAD/AAAA/wAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADxAAAA/wAA
        AP8AAAD/AAAAVQAAAJ4AAAD/AAAA/wAAAP0AAAA3AAAAlAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACGAAAAQwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACQAAABVAAAAVQAAAEEAAAArAAAA8gAAAP8AAAD/AAAA/wAAAOQAAAAuAAAAagAAAOcAAAD/AAAA/wAA
        AP8AAADjAAAAYQAAADYAAADpAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAtAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADcAAACqAAAAuAAAAPYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPEAAABuAAAAEQAA
        AC0AAABDAAAAKwAAABMAAAB2AAAA9AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAC0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAO4AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACyAAAANwAAALsAAAAuAAAAvgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAALQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAEQAAAA4AAAByAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAOMAAAATAAAAZgAAABQAAADrAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAxQAAAP8AAAD/AAAA7gAAADEAAAC2AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAM8AAACMAAAA1QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAD6AAAA/wAAAP8AAAD/AAAAYQAA
        AJgAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEMAAAB3AAAAdwAA
        AGcAAAAaAAAA5gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACwAAACIAAAAkgAAAOUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAATAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAJgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAATAAAA6gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANMAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAcAAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAABrAAAAEQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////wAAAf4AAAD+AAAA/gAAAPwAAAD4AAAA+AAAAP4AAAD+AAAA/gA
        AAPwAAQD4AAAA+AAAAPwAAAD+AAAA/gAAAPwAAAD4AAAA+AAAAPwAAAD+AAAA/gAAAP4AAAD4AAAA+AA
        AAPwAAAD+AAAA/gAAAP4AAAD/AAAB/////8=
</value>
  </data>
</root>